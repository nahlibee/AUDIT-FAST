version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: nahli
      POSTGRES_PASSWORD: 0000
      POSTGRES_DB: audit_auth
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nahli -d audit_auth"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: postgres -c 'max_connections=1000'

  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/audit_auth?currentSchema=public
      - SPRING_DATASOURCE_USERNAME=nahli
      - SPRING_DATASOURCE_PASSWORD=0000
      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=org.postgresql.Driver
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_JPA_SHOW-SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA=public
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  analysis-service:
    build: ./analysis-service
    ports:
      - "8000:8000"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8081
    depends_on:
      - auth-service

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_AUTH_SERVICE_URL=http://localhost:8081
      - REACT_APP_ANALYSIS_SERVICE_URL=http://localhost:8000
    depends_on:
      - auth-service
      - analysis-service

volumes:
  postgres_data: 